#!/usr/bin/python3

============================
How to use 101-lazy_matrix_mul.py
============================

This library is very simple, since it only has one function that is called
``100-lazy_matrix_mul()``.

normal cases
============
`` the lazy_matrix_mul()`` returns the multiplication of its arguments
which must be 2 matrix of lenght of rows of one equal to lenght of
columns of the other.

::
    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
           [15, 22]])

    >>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    array([[13, 16]])

cases the code took care of
===========================

::
    >>> lazy_matrix_mul(2, 3)
    Traceback (most recent call last):
        ...
    TypeError: Scalar operands are not allowed, use '*' instead

    >>> lazy_matrix_mul([[1, 2], [3, 4]], 4)
    Traceback (most recent call last):
        ...
    TypeError: Scalar operands are not allowed, use '*' instead

    >>> lazy_matrix_mul([3, 2], [[1, 3], [2, 4]])
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list of lists

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [3, 6])
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list of lists


    >>> lazy_matrix_mul([[1, 2], [3, "a"]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: invalid data type for einsum

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, "a"]])
    Traceback (most recent call last):
        ...
    TypeError: invalid data type for einsum

    >>> lazy_matrix_mul([[1, 2], [1, 2, 3]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: setting an array element with a sequence.

    >>> lazy_matrix_mul([[1, 2], [2, 4]], [[1, 2, 3], [2, 4]])
    Traceback (most recent call last):
        ...
    TypeError: setting an array element with a sequence.

    >>> lazy_matrix_mul([[1, 2, 3], [3, 4, 5], [1, 3, 4]], [[1, 3], [2, 4]])
    Traceback (most recent call last):
        ...
    ValueError: shapes (2,3) and (2,2) not aligned: 3 (dim 2) != 2 (dim 3)

Cases that the code did not take care of
=========================================

::
    >>> lazy_matrix_mul()
    Traceback (most recent call last):
        ...
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

    >>> lazy_matrix_mul([[2, 4,], [1, 3]], [[2, 1], [2, 4]], [[1, 2], [2, 4]])
    Traceback (most recent call last):
        ...
    TypeError: lazy_matrix_mul() takes 2 positional arguments but 3 were given

