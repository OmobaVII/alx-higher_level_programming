#!/usr/bin/python3

============================
How to use `7-base_geometry`
============================

This library has one class which is callsed
BaseGeometry which has two public instance methods

TestCases
=========

::
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> a = BaseGeometry()
    >>> a.integer_validator("my_int", 12)
    >>> a.integer_validator("omoba", "John")
    Traceback (most recent call last):
        ...
    TypeError: omoba must be an integer

    >>> a.integer_validator("Omoba", [1, 2])
    Traceback (most recent call last):
        ...
    TypeError: Omoba must be an integer

    >>> a.integer_validator("Omoba", (2, 3))
    Traceback (most recent call last):
        ...
    TypeError: Omoba must be an integer

    >>> a.integer_validator("Omoba", False)
    Traceback (most recent call last):
        ...
    TypeError: Omoba must be an integer

    >>> a.integer_validator("Omoba", None)
    Traceback (most recent call last):
        ...
    TypeError: Omoba must be an integer

    >>> a.integer_validator("Omoba", {2, 4})
    Traceback (most recent call last):
        ...
    TypeError: Omoba must be an integer

    >>> a.integer_validator("Omoba", {"boy": 3})
    Traceback (most recent call last):
        ...
    TypeError: Omoba must be an integer

    >>> a.integer_validator("Sanni", 0)
    Traceback (most recent call last):
        ...
    ValueError: Sanni must be greater than 0
    >>> a.integer_validator("Boy", -9)
    Traceback (most recent call last):
        ...
    ValueError: Boy must be greater than 0
    >>> a.integer_validator("Boy")
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'
    >>> a.integer_validator("Boy", 0, "Girl")
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given

    >>> a.integer_validator(None)
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> a.integer_validator(0, 8)

    >>> a.integer_validator()
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> id(a) is not id(a.integer_validator("boy", 8))
    True

    >>> isinstance(BaseGeometry, type)
    True
    >>> type(BaseGeometry())
    <class '7-base_geometry.BaseGeometry'>

    >>> a.area()
    Traceback (most recent call last):
        ...
    Exception: area() is not implemented
